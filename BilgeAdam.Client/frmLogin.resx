<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imListIcon.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imListIcon.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACQ
        DAAAAk1TRnQBSQFMAgEBAgEAAQgBAAEIAQABGAEAARgBAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFg
        AwABGAMAAQEBAAEYBgABG/8A/wCuAAHgAeMB7wEXATsBvhgAAcEByQHmARkBPQG+ugABsQHMAcIBCQFu
        AUoBvwHUAc02AAHgAeMB7wEJAS4BvwEDASgBvwEXATsBvhIAAcEByQHmAQYBKwG/AQMBKAG/ARkBPQG+
        tAABrgHKAcABDQFzAU0BDgF0AU4BDQFzAU0BvwHUAc0wAAHgAeMB7wELATEBwAEFASwBwQEFASwBwQEF
        ASwBwQEXATwBvgwAAcEByQHmAQcBLgHBAQUBLAHBAQUBLAHBAQUBLAHBARkBPQG+rgABqwHIAb4BEQF3
        AVEBEgF4AVIBEgF4AVIBEgF4AVIBEAF2AVABvwHUAc0qAAHgAeMB7wEMATUBwgEHATEBwwEHATEBwwEH
        ATEBwwEHATEBwwEHATEBwwEYATwBvwYAAcEByQHmAQkBMwHCAQcBMQHDAQcBMQHDAQcBMQHDAQcBMQHD
        AQcBMQHDARkBPgG+qAABqAHGAbsBFgF7AVUBFwF8AVYBFwF8AVYBFwF8AVYBFwF8AVYBFwF8AVYBFQF6
        AVQBvwHUAc0kAAP9AQ8BOAHEAQoBNgHGAQoBNgHGAQoBNgHGAQoBNgHGAQoBNgHGAQoBNgHGAQoBNgHG
        ARgBPQG/AcEByQHmAQwBNwHFAQoBNgHGAQoBNgHGAQoBNgHGAQoBNgHGAQoBNgHGAQoBNgHGAQoBNgHG
        ARoBPgG+ogABqAHGAbsBGwGAAVoBHAGBAVsBHAGBAVsBHAGBAVsBHAGBAVsBHAGBAVsBHAGBAVsBHAGB
        AVsBGQF+AVgBvwHUAc0kAAEYAUABxgENAUEB2QEMATwByAEMATwByAEMATwByAEMATwByAEMATwByAEM
        ATwByAEMATwByAEOATwBxwEMATwByAEMATwByAEMATwByAEMATwByAEMATwByAEMATwByAEMATwBygEP
        AUUB5QG5AcIB458AAaUBxAG5ASEBhgFfASIBhwFgASIBhwFgASIBhwFgASIBhwFgASIBhwFgASIBhwFg
        ASIBhwFgASIBhwFgASIBhwFgAR4BgwFdAb0B0wHLJAABGAFBAccBEAFIAd0BDwFCAcwBDwFCAcwBDwFC
        AcwBDwFCAcwBDwFCAcwBDwFCAcwBDwFCAcwBDwFCAcwBDwFCAcwBDwFCAcwBDwFCAcwBDwFCAcwBDwFD
        Ac4BEgFMAeoBuQHCAeOfAAGhAcIBtgEnAYsBZAEoAYwBZQEoAYwBZQEoAYwBZQEoAYwBZQEoAYwBZQEo
        AYwBZQEoAYwBZQEoAYwBZQEoAYwBZQEoAYwBZQEoAYwBZQEkAYgBYQG9AdMByyQAARkBQgHIARQBTwHh
        ARIBSQHPARIBSQHPARIBSQHPARIBSQHPARIBSQHPARIBSQHPARIBSQHPARIBSQHPARIBSQHPARIBSQHP
        ARIBSgHRARUBUwHtAbkBwgHjnwABoQHCAbYBLgGSAWsBLgGSAWsBLgGSAWsBLgGSAWsBLgGSAWsBLgGS
        AWsBLgGTAWwBMgGeAXQBLwGUAW0BLgGSAWsBLgGSAWsBLgGSAWsBLgGSAWsBLgGSAWsBKQGNAWcBvQHT
        AcskAAEaAUQByQEXAVYB5AEVAU8B0gEVAU8B0gEVAU8B0gEVAU8B0gEVAU8B0gEVAU8B0gEVAU8B0gEV
        AU8B0gEVAVAB1AEYAVoB8AG5AcIB46IAASoBjgFoATYBmgFzATUBmAFxATUBmAFxATUBmAFxATUBmAFx
        ATYBmgFyATMBoQF2Ab8B1AHNATEBngFzATYBmgFzATUBmAFxATUBmAFxATUBmAFxATUBmAFxATUBmAFx
        AS8BkgFsAb0B0wHLJAABGgFEAcUBGAFXAdkBGAFWAdYBGAFWAdYBGAFWAdYBGAFWAdYBGAFWAdYBGAFW
        AdYBGAFWAdYBGgFaAeMBuQHCAeOlAAHWAeIB3gEyAaABdAE8AaIBeAE7AZ8BdgE7AZ8BdgE8AaEBdwE4
        AaYBegHFAdgB0QMAAc0B3QHXATcBpQF5ATwBoQF3ATsBnwF2ATsBnwF2ATsBnwF2ATsBnwF2ATsBnwF2
        ATUBmQFwAb0B0wHLHgABwQHJAeYBGwFZAdYBGwFdAdkBGwFdAdkBGwFdAdkBGwFdAdkBGwFdAdkBGwFd
        AdkBGwFdAdkBGwFdAdkBGwFdAdkBGgFBAcGoAAHaAeUB4QE3AaIBdwFDAagBfgFDAagBfgE9AaoBfgHI
        AdkB0wkAAcoB2wHVAT8BrAF/AUMBpwF9AUIBpQF8AUIBpQF8AUIBpQF8AUIBpQF8AUIBpQF8ATsBngF2
        AboB0QHIGAABwQHJAeYBHgFgAdgBHgFkAdwBHgFkAdwBHgFkAdwBHgFkAdwBHgFkAdwBHgFkAdwBHgFk
        AdwBHgFkAdwBHgFkAdwBHgFkAdwBHgFkAdwBGgFCAcGoAAHeAecB5AE7AagBewFDAbIBhAHNAd0B1w8A
        AcgB2QHTAUQBsAGEAUkBrQGDAUgBqwGBAUgBqwGBAUgBqwGBAUgBqwGBAUgBqwGBAUEBpAF7AboB0QHI
        EgABwQHJAeYBIAFmAdwBIQFrAeABIQFrAeABIQFrAeABIQFrAeABIQFrAeABIQFrAeABIQFrAeABIQFr
        AeABIQFrAeABIQFrAeABIQFrAeABIQFrAeABIQFrAeABGwFDAcKoAAH3AvgB9wL4FQABxQHYAdEBSgG2
        AYoBTwGyAYkBTgGwAYcBTgGwAYcBTgGwAYcBTgGwAYcBTgGwAYcBRgGoAYABugHRAcgMAAHBAckB5gEj
        AWsB3wEkAXEB4wEkAXEB4wEkAXEB4wEkAXEB4wEkAXEB4wEkAXEB4wEkAXIB5gElAXMB6AEkAXEB4wEk
        AXEB4wEkAXEB4wEkAXEB4wEkAXEB4wEkAXEB4wEkAXEB4wEbAUMBwsMAAcUB2AHRAVEBvAGQAVUBtwGO
        AVQBtQGMAVQBtQGMAVQBtQGMAVQBtQGMAVQBtQGMAUwBrQGEAfUB9wH2BgAB9wH4AfkBJQFwAeEBJwF3
        AeYBJwF3AeYBJwF3AeYBJwF3AeYBJwF3AeYBJwF3AeYBJwF4AekBKwGDAfgBHQFKAccBKwGCAfwBJwF3
        AeYBJwF3AeYBJwF3AeYBJwF3AeYBJwF3AeYBJwF3AeYBJwF3AeYBGwFEAcLDAAHCAdYBzwFXAcIBlAFa
        AbsBkQFZAboBkAFZAboBkAFZAboBkAFfAccBmgENAXEBTAwAARsBQQHAAS4BjAH/ASkBfQHpASkBfQHp
        ASkBfQHpASkBfQHpASkBfgHsAS4BiQH4Ab8BxwHlAwABHQFKAccBLQGJAf8BKQF9AekBKQF9AekBKQF9
        AekBKQF9AekBKgGAAe4BLAGDAfQBzgHUAenGAAG/AdQBzQFcAcgBmgFeAcEBlQFdAb8BlAFkAc0BnwEP
        AXQBTxIAARsBQQHAATEBkQH/ASwBggHrASwBggHrAS0BhAHuATABjgH4Ab8BxwHlCQABHgFLAccBMAGO
        Af8BLAGCAesBLAGCAesBLQGFAfABLwGIAfQBzgHUAenMAAG9AdMBywFgAcsBnAFoAdEBogESAXcBUhgA
        ARsBQQHAATMBlgH/AS8BiAHwATMBkgH4Ab8BxwHlDwABHgFLAccBMgGTAf8BLwGJAfIBMQGMAfQBzgHU
        AenSAAG6AdEByAEXAXwBVh4AARsBQQHAATgBpAH4Ab8BxwHlFQABHgFMAccBNQGZAfQBzgHUAen8AAH2
        AfcB+RsAAvoB+/8A/wDkAAFCAU0BPgcAAT4DAAEoAwABYAMAARgDAAEBAQABAQUAASABARYAA/8BAAb/
        BgAG/wYAA/8B/AH/AT8GAAH/AR8B/wH4AX4BHwYAAf4BDwH/AfABPAEPBgAB/AEHAf8B4AEYAQcGAAH4
        AQMB/wHAAQABAwYAAfABAQH/AeABAAEDBgAB4AEAAf8B8AEAAQcGAAHAAQABfwH4AQABDwYAAYABAAE/
        AfwBAAEfBgABgAEAAR8B/gEAAT8GAAGAAUABDwH8AQABPwYAAcAB4AEHAfgBAAEfBgAB4QHwAQMB8AEA
        AQ8GAAHzAfgBAQHgAQABBwYAAf8B/AEAAcABAAEDBgAB/wH+AQEB4AEIAQMGAAL/AQMB8AEcAQcGAAL/
        AYcB+AE+AQ8GAAL/Ac8B/AF/AR8GAAP/Af4B/wG/BgAG/wYABv8GAAs=
</value>
  </data>
  <metadata name="errorProvider.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>124, 17</value>
  </metadata>
</root>